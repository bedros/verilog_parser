start: description*

description: module_declaration
module_declaration: ("module"|"macromodule") module_identifier param_list? port_list? ";" module_item* "endmodule"

module_identifier: identifier
param_list: "#" "(" [ports] ")"

port_list: "(" [ports] ")"
ports: identifier ("," identifier)*

//module item
module_item: module_or_generate_item

module_or_generate_item: continuous_assign
    | (expression ";")*

//statement
continuous_assign: "assign" net_assignment ("," net_assignment)* ";"
net_assignment: net_lvalue "=" expression
net_lvalue: identifier

//expression
expression: arith_expr

?arith_expr: term (_add_op term)*
?term: factor (_mul_op factor)*
?factor: _factor_op factor | power
?power: atom_expr ["**" factor]

!_add_op: "+"|"-"
!_mul_op: "*"|"/"
!_factor_op: "+"|"-"|"~"

?atom_expr: atom

?atom: NUMBER
    | identifier
    | "(" expression ")"

// Terminals
identifier: CNAME
    | ESC_NAME
ESC_NAME: "\\"(ANY_CHAR+)

NUMBER: ("0".."9")+
ANY_CHAR: /[^ \t\r\n\f]/
%import common.CNAME

// Ignorable
COMMENT: "//" /[^\n]*/
%ignore COMMENT

BLOCK_COMMENT: "/*" /(.|\n)*?/ "*/"
%ignore BLOCK_COMMENT

%import common.WS_INLINE
%ignore WS_INLINE
%import common.NEWLINE
%ignore NEWLINE