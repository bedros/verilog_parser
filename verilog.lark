start: description*

description: module_declaration
module_declaration: "module" module_identifier param_list? port_list? ";" module_item* "endmodule"

module_identifier: identifier
param_list: "#" (empty_list
        | "(" identifier ("," identifier)* ")")
port_list: empty_list
    | "(" identifier ("," identifier)* ")"
empty_list: "(" ")"

//module item
module_item: module_or_generate_item

module_or_generate_item: continuous_assign
    | (expression ";")*

//statement
continuous_assign: "assign" net_assignment ("," net_assignment)* ";"
net_assignment: net_lvalue "=" expression
net_lvalue: identifier

//expression
expression: product
    | expression add_op product

product: atom
    | product mul_op atom

add_op: "+" | "-"
mul_op: "*" | "/"

atom: NUMBER
    | identifier
    | "(" expression ")" -> group_expr

// Terminals
identifier: CNAME
    | ESC_NAME
ESC_NAME: "\\"(ANY_CHAR+)

NUMBER: ("0".."9")+
ANY_CHAR: /[^ \t\r\n\f]/
%import common.CNAME

// Ignorable
COMMENT: "//" /[^\n]*/
%ignore COMMENT

BLOCK_COMMENT: "/*" /(.|\n)*?/ "*/"
%ignore BLOCK_COMMENT

%import common.WS_INLINE
%ignore WS_INLINE
%import common.NEWLINE
%ignore NEWLINE